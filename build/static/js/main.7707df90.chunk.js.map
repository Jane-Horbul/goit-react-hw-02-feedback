{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/Feedback.js","App.js","index.js"],"names":["module","exports","Statistic","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","className","styles","FeedbackOptions","this","props","options","onLeaveFeedback","map","option","onClick","name","React","Component","Section","title","children","Notification","message","Feedback","state","handleFeedback","e","feedback","target","setState","prevState","Object","values","reduce","acc","value","Math","floor","keys","defaultProps","initialValue","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oIACAA,EAAOC,QAAU,CAAC,cAAc,qCAAqC,OAAS,kC,gBCA9ED,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,kBCA7DD,EAAOC,QAAU,CAAC,kBAAkB,sC,gBCApCD,EAAOC,QAAU,CAAC,QAAU,gC,2LCwBbC,EArBG,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,IAAKC,EAAtB,EAAsBA,mBAAoBC,EAA1C,EAA0CA,gCAA1C,OACd,8BACA,qBAAIC,UAAWC,IAAO,mBAAtB,UACI,wCAAWN,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,W,gBCcjBG,E,4JAnBb,WACE,MAAqCC,KAAKC,MAAlCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,gBACjB,OACE,qBAAKN,UAAWC,IAAO,eAAvB,SACGI,EAAQE,KAAI,SAACC,GAAD,OACX,wBAAQR,UAAWC,IAAM,OAAyBQ,QAASH,EAAiBI,KAAMF,EAAlF,SACGA,GADuCA,Y,GANtBG,IAAMC,W,gBCUrBC,EAXC,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OACd,0BAASf,UAAWC,IAAM,QAA1B,UACE,oBAAID,UAAWC,IAAM,MAArB,SAAiCa,IAChCC,M,iBCKUC,EARM,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OACjB,mBAAGjB,UAAWC,IAAM,QAApB,SAAkCgB,KCEhCC,E,4MASFC,MAAQ,CACJxB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTuB,eAAiB,SAAAC,GACb,IAAMC,EAAWD,EAAEE,OAAOb,KAC1B,EAAKc,UAAS,SAAAC,GAAe,OAAO,eAAGH,EAAWG,EAAUH,GAAY,O,EAE5ExB,mBAAqB,WAEjB,OADY4B,OAAOC,OAAO,EAAKR,OACpBS,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAM,I,EAElD/B,gCAAkC,WAC9B,OAAK,EAAKD,qBACeiC,KAAKC,MAAwB,IAAlB,EAAKb,MAAMxB,KAAa,EAAKG,sBAAsB,IADhD,G,4CAI3C,WACI,OACI,gCACI,cAAC,EAAD,CAASgB,MAAM,wBAAf,SACA,cAAC,EAAD,CAAiBT,QAASqB,OAAOO,KAAK9B,KAAKgB,OACvCb,gBAAiBH,KAAKiB,mBAI1B,cAAC,EAAD,CAASN,MAAM,aAAf,SACKX,KAAKL,qBACF,cAAC,EAAD,CACIH,KAAMQ,KAAKgB,MAAMxB,KACjBC,QAASO,KAAKgB,MAAMvB,QACpBC,IAAKM,KAAKgB,MAAMtB,IAChBC,mBAAoBK,KAAKL,qBACzBC,gCAAiCI,KAAKJ,oCAE1C,cAAC,EAAD,CAAckB,QAAQ,+B,GA9CvBN,IAAMC,WAAvBM,EACKgB,aAAe,CAClBC,aAAc,GAqDPjB,QClDAkB,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7707df90.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button-list\":\"FeedbackOptions_button-list__abJl9\",\"button\":\"FeedbackOptions_button__3n-hy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics-list\":\"Statistics_statistics-list__2Quom\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__eciZi\"};","import React from 'react';\nimport styles from './Statistics.module.css';\nimport PropTypes from \"prop-types\";\n\nconst Statistic = ({good, neutral, bad, countTotalFeedback, countPositiveFeedbackPercentage}) => (\n    <div>\n    <ul className={styles['statistics-list']}>\n        <li>Good: {good}</li>\n        <li>Neutral: {neutral}</li>\n        <li>Bad: {bad}</li>\n        <li>Total: {countTotalFeedback}</li>\n        <li>Positive feedback: {countPositiveFeedbackPercentage}</li>\n      </ul>\n    </div>\n               \n);\n\nStatistic.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  countTotalFeedback: PropTypes.number,\n  countPositiveFeedbackPercentage: PropTypes.string\n}\n\nexport default Statistic;","import React from 'react';\nimport styles from './FeedbackOptions.module.css';\nimport PropTypes from \"prop-types\";\n\n\nclass FeedbackOptions extends React.Component {\n  render() {\n    const { options, onLeaveFeedback } = this.props;\n    return (\n      <div className={styles['button-list']}>\n        {options.map((option) => (\n          <button className={styles['button']} key={option} onClick={onLeaveFeedback} name={option}>\n            {option}\n          </button>\n        ))}\n      </div>\n    );\n  }\n}\n\nFeedbackOptions.propTypes = {\n    onLeaveFeedback: PropTypes.func,\n    options: PropTypes.arrayOf(PropTypes.string)\n}\n\nexport default FeedbackOptions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({title, children}) => (\n  <section className={styles['section']}>\n    <h2 className={styles['title']}>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string\n}\n\nexport default Section;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport styles from './Notification.module.css';\n\nconst Notification = ({message}) => (\n    <p className={styles['message']}>{message}</p>\n);\n\nNotification.propTypes = {\n    message: PropTypes.string\n}\n\nexport default Notification;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport Statistic from './Statistics/Statistics';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Section from './Section/Section';\nimport Notification from './Notification/Notification';\n\nclass Feedback extends React.Component {\n    static defaultProps = {\n        initialValue: 0,\n    };\n\n    static propTypes = {\n        inintialValue: PropTypes.number,\n    };\n\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n    };\n\n    handleFeedback = e => {\n        const feedback = e.target.name;\n        this.setState(prevState => { return { [feedback]: prevState[feedback] + 1 } });\n   }\n    countTotalFeedback = () => {\n        const arr = Object.values(this.state);\n        return arr.reduce((acc, value) => acc + value,0);\n    }\n    countPositiveFeedbackPercentage = () => {\n        if (!this.countTotalFeedback()) return 0;\n        const positiveFeedback = Math.floor(this.state.good * 100 / this.countTotalFeedback())+'%';\n        return positiveFeedback;\n    }\n    render() {\n        return (\n            <div>\n                <Section title='Please leave feedback'>\n                <FeedbackOptions options={Object.keys(this.state)}\n                    onLeaveFeedback={this.handleFeedback}\n                />\n                </Section>\n                \n                <Section title='Statistics'>\n                    {this.countTotalFeedback() ?\n                        <Statistic\n                            good={this.state.good}\n                            neutral={this.state.neutral}\n                            bad={this.state.bad}\n                            countTotalFeedback={this.countTotalFeedback()}\n                            countPositiveFeedbackPercentage={this.countPositiveFeedbackPercentage()}\n                        /> :\n                        <Notification message=\"No feedback given\" />\n                    }\n                </Section>\n            </div>\n        );\n    }\n    \n};\n\nexport default Feedback;","import React from 'react';\nimport './App.css';\nimport Feedback from './components/Feedback';\n\nfunction App() {\n  return (\n    <div>\n      <Feedback />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}